plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT' apply(false)
    id 'maven-publish'
}

group 'top.gregtao.iconr'

apply plugin: 'java'

project(":Fabric-1.19.3") {

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }
}

project(":Fabric-1.19.2") {

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }
}

project(":Fabric-1.18.2") {

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }

}

project(":Fabric-1.17.1") {

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_16

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 16
    }

}

project(":Fabric-1.16.5") {

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 8
    }

}

subprojects() {
    apply plugin: 'fabric-loom'

    archivesBaseName = project.archives_base_name
    setVersion(project.mod_version)
    setGroup(project.maven_group + project.name.toString().replace('.', '_'))

    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

        modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
        modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    }

    processResources {
        inputs.property "version", project.version

        filesMatching("fabric.mod.json") {
            expand "version": project.version
        }
    }

    jar {
        from("LICENSE") {
            rename { "${it}_${project.archivesBaseName}"}
        }
    }
}

build {
    finalizedBy "copyFiles"
}

task copyFiles(type: Copy) {
    project.subprojects.forEach(project -> {
        from(project.name + "/build/libs/" + project.archivesBaseName + "-" + project.getVersion() + ".jar")
    })
    into(".builtFiles")
}